{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "CloudFormation template to integrate S3 bucket with Solace broker",
	"Parameters": {
		"vpcId": {
			"Type": "String"
		},
		"RoleARN": {
			"Type": "String"
		}
	},
	"Mappings": {},
	"Conditions": {},
	"Resources": {
		"ApiProxyGateway": {
			"Type": "AWS::ApiGateway::RestApi",
			"Properties": {
				"Name": {"Fn::Join": ["-",[{"Ref": "AWS::StackName"},"gateway"]]},
				"Description": "Proxy for created resource",
				"FailOnWarnings": true,
				"EndpointConfiguration": {"Types":["PRIVATE"]},
				"Body": {
					"swagger": "2.0",
					"info": {
						"version": "2016-10-13T23:04:43Z",
						"title": "Solace->S3"
					},
					"schemes": [
						"https"
					],
					"paths": {
						"receive/{folder}": {
							"post": {
								"produces": [
									"application/json"
								],
								"parameters": [
									{
                                        "name": "Content-Type",
                                        "in": "header",
                                        "required": false,
                                        "type": "string"
                                    },
									{
										"name": "folder",
										"in": "path",
										"required": true,
										"type": "string"
									}
								],
								"responses": {
									"200": {
										"description": "200 response",
										"schema": {
											"$ref": "#/definitions/Empty"
										},
										"headers": {
											"Content-Length": {
												"type": "string"
											},
											"Date": {
												"type": "string"
											},
											"Content-Type": {
												"type": "string"
											}
										}
									},
									"400": {
										"description": "400 response"
									},
									"500": {
										"description": "500 response"
									}
								},
								"x-amazon-apigateway-integration": {
									"credentials": {"Ref": "RoleARN"},
									"uri": {"Fn::Join": [":",["arn:aws:apigateway",{"Ref": "AWS::Region"},"s3:path/{bucket}"]]},
									"responses": {
										"default": {
											"statusCode": "200",
											"responseParameters": {
												"method.response.header.Content-Type": "integration.response.header.Content-Type",
												"method.response.header.Date": "integration.response.header.Date",
												"method.response.header.Content-Length": "integration.response.header.content-length"
											}
										},
										"4\\d{2}": {
											"statusCode": "400"
										},
										"5\\d{2}": {
											"statusCode": "500"
										}
									},
                                    "requestParameters": {
                                        "integration.request.header.x-amz-acl": "'authentication-read'",
                                        "integration.request.path.bucket": "method.request.path.folder",
                                        "integration.request.header.Content-Type": "method.request.header.Content-Type"
                                    },
									"passthroughBehavior": "when_no_match",
									"httpMethod": "GET",
									"type": "aws"
								}
							}
						},
						"receive/{folder}/{item}": {
							"post": {
								"produces": [
									"application/json"
								],
								"parameters": [
									{
										"name": "item",
										"in": "path",
										"required": true,
										"type": "string"
									},
									{
										"name": "folder",
										"in": "path",
										"required": true,
										"type": "string"
									}
								],
								"responses": {
									"200": {
										"description": "200 response",
										"schema": {
											"$ref": "#/definitions/Empty"
										},
										"headers": {
											"content-type": {
												"type": "string"
											},
											"Content-Type": {
												"type": "string"
											}
										}
									},
									"400": {
										"description": "400 response"
									},
									"500": {
										"description": "500 response"
									}
								},
								"x-amazon-apigateway-integration": {
									"credentials": {"Ref": "RoleARN"},
									"uri": {"Fn::Join": [":",["arn:aws:apigateway",{"Ref": "AWS::Region"},"s3:path/{bucket}/{object}"]]},
									"responses": {
										"default": {
											"statusCode": "200",
											"responseParameters": {
												"method.response.header.content-type": "integration.response.header.content-type",
												"method.response.header.Content-Type": "integration.response.header.Content-Type"
											}
										},
										"4\\d{2}": {
											"statusCode": "400"
										},
										"5\\d{2}": {
											"statusCode": "500"
										}
									},
									"requestParameters": {
										"integration.request.path.object": "method.request.path.item",
										"integration.request.path.bucket": "method.request.path.folder"
									},
									"passthroughBehavior": "when_no_match",
									"httpMethod": "GET",
									"type": "aws"
								}
							}
						},
						"send/{folder}/{item}": {
							"post": {
								"produces": [
									"application/json"
								],
								"parameters": [
									{
										"name": "item",
										"in": "path",
										"required": true,
										"type": "string"
									},
									{
										"name": "folder",
										"in": "path",
										"required": true,
										"type": "string"
									}
								],
								"responses": {
									"200": {
										"description": "200 response",
										"schema": {
											"$ref": "#/definitions/Empty"
										},
										"headers": {
											"Content-Length": {
												"type": "string"
											},
											"Content-Type": {
												"type": "string"
											}
										}
									},
									"400": {
										"description": "400 response"
									},
									"500": {
										"description": "500 response"
									}
								},
								"x-amazon-apigateway-integration": {
									"credentials": {"Ref": "RoleARN"},
									"uri": {"Fn::Join": [":",["arn:aws:apigateway",{"Ref": "AWS::Region"},"s3:path/{bucket}/{object}"]]},									
									"responses": {
										"4\\d{2}": {
											"statusCode": "400"
										},
										"default": {
											"statusCode": "200",
											"responseParameters": {
												"method.response.header.Content-Type": "integration.response.header.Content-Type",
												"method.response.header.Content-Length": "integration.response.header.Content-Length"
											}
										},
										"5\\d{2}": {
											"statusCode": "500"
										}
									},
									"requestParameters": {
										"integration.request.path.object": "method.request.path.item",
										"integration.request.path.bucket": "method.request.path.folder"
									},
									"passthroughBehavior": "when_no_match",
									"httpMethod": "PUT",
									"type": "aws"
								}
							}
						}
					},
					"definitions": {
						"Empty": {
							"type": "object",
							"title": "Empty Schema"
						}
					},
					"x-amazon-apigateway-policy": {
						"Version": "2012-10-17",
						"Statement": [
							{
								"Effect": "Allow",
								"Principal": "*",
								"Action": "execute-api:Invoke",
								"Resource": {
									"Fn::Join": [":",
										[
											"arn:aws:execute-api",
											{"Ref": "AWS::Region"},
											{"Fn::Select": ["4",{"Fn::Split": [":",{"Ref": "RoleARN"}]}]},
											"*/*"
										]
									]
								},
								"Condition": {
									"StringEquals": {
										"aws:sourceVpc": {"Ref": "vpcId"}
									}
								}
							}
						]
					}
				}
			}
		},
		"ApiProxyGatewayDeployment": {
			"Type": "AWS::ApiGateway::Deployment",
			"DependsOn": [
				"ApiProxyGateway"
			],
			"Properties": {
				"Description": "Deploy the service proxy",
				"RestApiId": {
					"Ref": "ApiProxyGateway"
				},
				"StageDescription": {
					"CacheClusterEnabled": false
				},
				"StageName": "DEVELOPMENT"
			}
		}
	}
}